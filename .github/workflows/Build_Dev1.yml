name: Build_Dev1
on:
  push:
    branches:
      - refs/heads/main
  workflow_dispatch: {}
  workflow_call: {}
  workflow_run:
    workflows: BuildAndUnitTest
    types:
      - completed

jobs:
  on-success:
    runs-on:
  
      - ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: meta_runner_test
        run: |-
          echo  "test meta runner"
      
  on-failure:
    runs-on:

      - ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: RetryTrigger
        run: |-
          for i in {1..3}
          do
          response1=$(curl -X POST \
           -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
           -H "Accept: application/vnd.github.v3+json" \
           "https://api.github.com/repos/${{ github.repository }}/actions/workflows/parent.yml/dispatches" \
           -d '{"ref":"main"}')
           echo "Wait for: 30seconds to trigger dispatch event"
           sleep 30s
           response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
           "https://api.github.com/repos/${{ github.repository }}/actions/workflows/parent.yml/runs")
           workflow_runs=$(echo "$response" | jq -r '.workflow_runs')
           printf "%s" $workflow_runs > workflow_runs.json
           latest_run=$(cat workflow_runs.json | jq 'max_by(.updated_at)')
           printf "%s" $latest_run > latest_workflow_run.json
           conclusion=$(echo "$latest_run" | jq -r '.conclusion')
            if [[ "$conclusion" == "success" ]]; then
              echo "Workflow is successful."
              break
            elif [[ "$i" == 3 ]]; then
             echo "Workflow is not successful after 3 attempts. Exiting..."
             exit 1
            else
            echo "Workflow is not successful. Retrying in 30 seconds..."
           fi
          done
      
      
     
        
  Build_NUnitTests:
    needs:
     - on-success
     - on-failure    
    if: ${{ (!failure()) || github.event_name == 'workflow_dispatch' }}
    uses: ./.github/workflows/Build_NUnitTests.yml
  Build_Manual:
    needs:
     - on-success
     - on-failure
     - Build_NUnitTests     
    if: ${{ (!failure()) || github.event_name == 'workflow_dispatch' }}
    uses: ./.github/workflows/Build_Manual.yml
  Build_Dev1:
    needs:
      - Build_NUnitTests
      - Build_Manual
      - on-success
      - on-failure
    if: ${{ always() && ((needs.on-success.result == 'success' || needs.on-success.result == 'skipped') && (needs.on-failure.result == 'success' || needs.on-failure.result == 'skipped') && needs.Build_NUnitTests.result == 'success' && needs.Build_Manual.result == 'success') }}
    runs-on:
 
      - ubuntu-latest
    steps:
      - name: meta_runner_test
        run: |-
          echo  "test meta runner"
     
